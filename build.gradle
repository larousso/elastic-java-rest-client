buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'http://maven.tmatesoft.com/content/repositories/releases/'
        }
    }
    dependencies {
        classpath 'au.com.ish.gradle:release:2.2.2'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id "maven-publish"
    id "java"
}

sourceCompatibility = 1.8

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'release'


def akkaVersion = "2.5.3"
def scalaVersion = "2.12"
def scm = "https://github.com/larousso/elastic-java-rest-client"

group 'com.adelegue'
//version =  '2.0.2-SNAPSHOT'
version =  release.projectVersion

jar {
    baseName = 'elastic-java-rest-client'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://raw.githubusercontent.com/mathieuancelin/json-lib-javaslang/master/repository/releases/'
    }
}

dependencies {
    compile('io.vavr:vavr:0.9.0')
    compile("com.typesafe.akka:akka-stream_${scalaVersion}:${akkaVersion}")
    compile("org.reactivecouchbase:json-lib-javaslang:2.0.0")
    compile("org.elasticsearch.client:rest:5.5.0")
    testCompile("com.typesafe.akka:akka-testkit_${scalaVersion}:${akkaVersion}")
    testCompile("org.elasticsearch:elasticsearch:5.5.0")
    testCompile("org.elasticsearch.plugin:transport-netty4-client:5.5.0")
    testCompile("org.elasticsearch.plugin:reindex-client:5.5.0")
    testCompile("org.slf4j:slf4j-api:1.7.25")
    testCompile("org.assertj:assertj-core:3.6.2")
    testCompile("junit:junit:4.12")
    testCompile("org.assertj:assertj-core:3.5.2")
    testCompile("org.apache.logging.log4j:log4j-api:2.8.2")
    testCompile("org.apache.logging.log4j:log4j-core:2.8.2")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_PASSWORD')
    publications = ['mavenPublication']
    pkg {
        repo = 'maven'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/larousso/elastic-java-rest-client.git'
        version {
            name = "${version}"
        }
    }
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "maven"
        }
    }
    developers {
        developer {
            id "adelegue"
            name "Alexandre Del√®gue"
            email "aadelegue@gmail.com"
        }
    }
    scm {
        url "${scm}.git"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId "${group}"
            artifactId "${jar.baseName}"
            version "${version}"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Elasticsearch REST client')
                root.appendNode('name', 'elastic-java-rest-client')
                root.appendNode('url', "${scm}")
                root.children().last() + pomConfig
            }
        }
    }
}

release {
    failOnSnapshotDependencies = true
    allowLocalModifications = false
    releaseDryRun = false
    scm = 'git'
}