plugins {
    id "maven-publish"
    id "java"
    id 'ch.netzwerg.release' version '1.2.5'
}

repositories {
    mavenCentral()
    jcenter()
}

def akkaVersion = "2.6.14"
def scalaVersion = "2.13"
def elasticVersion = "7.15.2"
def scm = "https://github.com/larousso/elastic-java-rest-client"

group 'com.adelegue'
archivesBaseName = 'elastic-java-rest-client'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation 'io.vavr:vavr:0.10.4'
    implementation "com.typesafe.akka:akka-stream_${scalaVersion}:${akkaVersion}"
    implementation "org.reactivecouchbase.json:json-lib:1.0.0"
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.0'
    implementation 'joda-time:joda-time:2.10.13'
    implementation "org.elasticsearch.client:elasticsearch-rest-client:${elasticVersion}"
    implementation 'org.scala-lang.modules:scala-java8-compat_2.13:1.0.2'
    testImplementation "com.typesafe.akka:akka-testkit_${scalaVersion}:${akkaVersion}"
    testImplementation "org.elasticsearch:elasticsearch:${elasticVersion}"
    testImplementation "org.elasticsearch.plugin:transport-netty4-client:${elasticVersion}"
    testImplementation "org.elasticsearch.plugin:reindex-client:${elasticVersion}"
    testImplementation 'org.slf4j:slf4j-api:1.7.32'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.apache.logging.log4j:log4j-api:2.14.1'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.14.1'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:deprecation']
}
java {
    withJavadocJar()
    withSourcesJar()
}

javadoc.failOnError = false

publishing {
    publications {
        mavenPublication(MavenPublication) {
            groupId 'com.adelegue'
            artifactId 'elastic-java-rest-client'
            from components.java
            version "${project.version}"
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            def releaseRepository = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2")
            def snapshotRepository = uri("https://s01.oss.sonatype.org/content/repositories/snapshots")
            def isSnapshotVersion = version.endsWith('-SNAPSHOT');
            url = isSnapshotVersion ? snapshotRepository : releaseRepository

            credentials {
                username = System.getenv("SONATYPE_USERNAME")
                password = System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}